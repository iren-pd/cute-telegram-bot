import { Scenes, Markup } from 'telegraf';
import getUser from '../../../services/users/actions/getUser';
import updateUser from '../../../services/users/actions/updateUser';
import { OrderPaymentStatus, OrderStatus } from '../../../models/order.model';
import { renderCart } from '../../scenes/cart.scene';
import { getOrderStatusText } from '../../../utils/orderStatusText';

export const confirmOrder = async (ctx: Scenes.SceneContext) => {
  const telegramId = ctx.from?.id;
  if (!telegramId) return;

  const user = await getUser(String(telegramId));
  if (!user) return;

  await updateUser(String(telegramId), {
    state: {
      ...user.state,
      cart: {
        ...user.state.cart,
        status: OrderStatus.PROCESSING,
        paymentStatus: OrderPaymentStatus.PENDING,
      },
    },
  });

  const updatedUser = await getUser(String(telegramId));
  const orderStatusText = getOrderStatusText(updatedUser);
  const confirmationText =
    '‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!\n\n' +
    orderStatusText +
    '\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –¢—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞.\n\n' +
    'üîÑ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.';

  const confirmationKeyboard = Markup.inlineKeyboard([
    [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'cancel_order')],
  ]);

  await ctx.editMessageText(confirmationText, {
    parse_mode: 'HTML',
    ...confirmationKeyboard,
  });
};

export const cancelOrder = async (ctx: Scenes.SceneContext) => {
  const telegramId = ctx.from?.id;
  if (!telegramId) return;

  const user = await getUser(String(telegramId));
  if (!user) return;

  await updateUser(String(telegramId), {
    state: {
      ...user.state,
      cart: {
        ...user.state.cart,
        status: OrderStatus.CANCELLED,
        paymentStatus: OrderPaymentStatus.FAILED,
      },
    },
  });

  const updatedUser = await getUser(String(telegramId));
  if (updatedUser) {
    const orderStatusText = getOrderStatusText(updatedUser);
    const cancelText =
      '‚ùå –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω!\n\n' +
      orderStatusText +
      '\n–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑!';
    await ctx.editMessageText(cancelText, { parse_mode: 'HTML' });

    await updateUser(String(telegramId), {
      state: {
        ...user.state,
        cart: {
          ...user.state.cart,
          status: OrderStatus.NEW,
          paymentStatus: OrderPaymentStatus.PENDING_CONFIRMATION,
        },
      },
    });
    const updatedUserAfterCancel = await getUser(String(telegramId));
    if (updatedUserAfterCancel) {
      await renderCart(ctx, updatedUserAfterCancel);
    }
  }
};
